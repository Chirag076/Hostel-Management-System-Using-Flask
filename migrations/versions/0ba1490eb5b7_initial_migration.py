from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '0ba1490eb5b7'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        # Add a name for the foreign key constraint
        batch_op.create_foreign_key('fk_expense_user', 'user', ['user_id'], ['id'])

    with op.batch_alter_table('fee_record', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('amount',
               existing_type=sa.REAL(),
               type_=sa.Float(),
               existing_nullable=False)
        batch_op.alter_column('date_paid',
               existing_type=sa.DATE(),
               nullable=True)
        # Drop the foreign key with a name, change 'None' to 'fk_fee_record_student'
        batch_op.drop_constraint('fk_fee_record_student', type_='foreignkey')
        batch_op.create_foreign_key('fk_fee_record_student', 'student', ['student_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('fee_record', schema=None) as batch_op:
        # Drop the foreign key with a name
        batch_op.drop_constraint('fk_fee_record_student', type_='foreignkey')
        batch_op.create_foreign_key('fk_fee_record_student', 'student', ['student_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('date_paid',
               existing_type=sa.DATE(),
               nullable=False)
        batch_op.alter_column('amount',
               existing_type=sa.Float(),
               type_=sa.REAL(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('expense', schema=None) as batch_op:
        # Drop the foreign key with a name
        batch_op.drop_constraint('fk_expense_user', type_='foreignkey')
        batch_op.drop_column('user_id')

    # ### end Alembic commands ###
